# 服务器
server:
  port: 8071
  session:
    timeout: 1800  # 30 分钟

#注册中心
eureka:
  instance:
          instance-id: ${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}
          prefer-ip-address: true
          hostname: ${spring.cloud.client.ipAddress}
  client:
    serviceUrl:
      defaultZone: http://admin:123456@192.168.1.151:9205/eureka/
      # defaultZone: http://admin:123456@peer1:8761/eureka/,http://admin:123456@peer2:8762/eureka/
  
# 数据库
druid:
  url: jdbc:mysql://192.168.1.151:3306/iot?useUnicode=true&characterEncoding=utf-8&useSSL=false
  userName: root
  password: 123456
    
# 配置redis  cluster=false ，说明是单机版的。
redis: 
  iscluster: false
# 配置redis 假如用的是 cluster的地址列表 ，用逗号隔开
  cluster: 
    host: 192.168.6.102:9001,192.168.6.102:9004,192.168.6.103:9002,192.168.6.103:9005,192.168.6.104:9003,192.168.6.104:9006
# 配置redis 假如用的是 单机版
  single: 
    host: 192.168.1.151:6379
spring:
# kafka
  kafka:
    #bootstrap-servers: 192.168.6.102:9092,192.168.6.103:9092,192.168.6.104:9092
    #单机版用这个地址
    bootstrap-servers: 192.168.1.151:9092
    producer:
      batch-size: 26384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer 
    consumer:
      group-id: consumer-prorps
      auto-offset-reset: latest
      session.timeout.ms: 60000
      enable-auto-commit: false
      auto-commit-interval: 1000
      max-poll-records: 600
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    #自定义 concurrency 为通道数，需要kafka分区配合使用。实例数量*concurrency=分区数量。需要用命为property主题增加分区
      concurrency: 10
      batch: true 

 #  mongodb设置 
  data:
    mongodb:
      #uri: mongodb://192.168.6.102:27015,192.168.6.103:27015,192.168.6.104:27015
      uri: mongodb://192.168.1.151:27017
      database: t9       
           
kafkaConcurrency: 10

# DebugInterceptor
appDebug:
  debug: true
  
# SnowFlake 发号器 . 格式为 0-0 ，前面数字是 本实例启动的序号。 后面的数字是 整个dataCenter系统启动的序号。
#*******一般来说，启动多个使用snowflake 实例，只需要更改前面的序号。 两个参数的取值范围是 0-31 的整数******
snowFlakeParam: 
  snowFlakeSetting: 0-1